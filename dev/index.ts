      import {        createClock,        scaleTimeSeries,      } from "https://clocks-lib.vpr-group.ch/api/latest";      createClock((clock, data) => {        clock.addCircles({          count: 10, // Number of rectangles          radius: 50,          offset: 100,          fill: "#574763",        });        clock.addCircles({          count: 10, // Number of rectangles          radius: 50,          offset: 120,          fill: "#474963",        });        clock.addCircles({          count: 5, // Number of rectangles          radius: 30,          offset: 300,          fill: "#496347",        });        clock.addCircles({          count: 10, // Number of circles          radius: 30, // Largest circles          offset: 100, // Closest to edge          fill: "#754d2f",        });        clock.addCircles({          count: 10,          radius: 20, // Medium circles          offset: 150, // Middle ring          fill: "#75382f",        });        // Import clock creation function        // Add three concentric rings of circles        clock.addCircles({          count: 24, // Number of circles          radius: 30, // Largest circles          offset: 30, // Closest to edge          fill: "#dbbfd6",        });        clock.addCircles({          count: 24,          radius: 20, // Medium circles          offset: 80, // Middle ring          fill: "#dbbfd6",        });        clock.addCircles({          count: 24,          radius: 10, // Smallest circles          offset: 110, // Furthest from edge          fill: "#dbbfd6",        });        clock.addPlainCircle({          radius: 400,          texture: "img2.jpg",          tint: {            r: 255,            g: 0,            b: 108,            a: 20,          },        });        // console.log(data);        // const radius = clock.width * 0.5;        // const supplyFromGrid = data["Electricity-supply-from-grid"];        // const supplyFromGridHour = supplyFromGrid.slice(0, 24);        // const supplyPhoto = data["Electricity-supply-photovoltaics"];        // const supplyPhotoHour = supplyPhoto.slice(0, 24);        // const min = radius * 0.0;        // const max = radius * 0.82;        // const [scaledSupplyFromGrid, scaledSupplyPhoto] = scaleTimeSeries(        //   [supplyFromGridHour, supplyPhotoHour],        //   min,        //   max        // );        // clock.addRadialChart(scaledSupplyFromGrid, {        //   subdivisions: 4,        //   tint: {        //     r: 255,        //     g: 255,        //     b: 255,        //     a: 255,        //   },        // });        // clock.addRadialChart(scaledSupplyPhoto, {        //   subdivisions: 4,        //   tint: {        //     r: 255,        //     g: 255,        //     b: 255,        //     a: 255,        //   },        // });        // const steps = 80;        // for (let i = 0; i < steps; i++) {        //   const min = radius * 0.0;        //   const max = radius * 0.82 - i * (radius / steps);        //   const [scaledSupplyFromGrid, scaledSupplyPhoto] = scaleTimeSeries(        //     [supplyFromGridHour, supplyPhotoHour],        //     min,        //     max        //   );        //   clock.addRadialChart(scaledSupplyFromGrid, {        //     subdivisions: 4,        //     blendMode: "multiply",        //     tint: {        //       r: 240,        //       g: 150,        //       b: 137,        //       a: 255,        //     },        //   });        //   clock.addRadialChart(scaledSupplyPhoto, {        //     subdivisions: 4,        //     blendMode: "multiply",        //     tint: {        //       r: 150,        //       g: 189,        //       b: 255,        //       a: 255,        //     },        //   });        // }        // clock.addPlainCircle({        //   radius: 400,        //   texture: " -21 Kopie.jpg",        //   tint: {        //     r: 48,        //     g: 178,        //     b: 255,        //     a: 20,        //   },        // });        clock.addRectangles({          count: 12,          width: 3,          height: 30,          offset: 20,          fill: "Blue",        });        clock.addCustomShape({          count: 12,          handler: async (index, instance) => {            return instance.createTextElement({              text: `${index.toString().padStart(2, "0")}`,              fontSize: 20,              offset: 10,              fill: "Blue",            });          },        });      });    